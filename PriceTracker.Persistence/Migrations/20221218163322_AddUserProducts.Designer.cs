// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriceTracker.Persistence;

#nullable disable

namespace PriceTracker.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221218163322_AddUserProducts")]
    partial class AddUserProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("PriceTracker.Entities.ConsumedRefreshToken", b =>
                {
                    b.Property<Guid>("ConsumedRefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ConsumedRefreshTokenId");

                    b.HasIndex("ConsumedRefreshTokenId")
                        .IsUnique();

                    b.ToTable("ConsumedRefreshTokens");
                });

            modelBuilder.Entity("PriceTracker.Entities.TrackingProduct", b =>
                {
                    b.Property<Guid>("TrackingProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AddedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TrackingProductId");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("TrackingProducts");
                });

            modelBuilder.Entity("PriceTracker.Entities.TrackingProductPrice", b =>
                {
                    b.Property<Guid>("TrackingProductPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<Guid>("TrackingProductId")
                        .HasColumnType("TEXT");

                    b.HasKey("TrackingProductPriceId");

                    b.HasIndex("TrackingProductId");

                    b.ToTable("TrackingProductPrices");
                });

            modelBuilder.Entity("PriceTracker.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TokenVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("EMail")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PriceTracker.Entities.UserProduct", b =>
                {
                    b.Property<Guid>("UserProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackingProductId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserProductId");

                    b.HasIndex("TrackingProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProducts");
                });

            modelBuilder.Entity("PriceTracker.Entities.TrackingProduct", b =>
                {
                    b.HasOne("PriceTracker.Entities.User", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddedByUser");
                });

            modelBuilder.Entity("PriceTracker.Entities.TrackingProductPrice", b =>
                {
                    b.HasOne("PriceTracker.Entities.TrackingProduct", "TrackingProduct")
                        .WithMany("TrackingProductPrices")
                        .HasForeignKey("TrackingProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackingProduct");
                });

            modelBuilder.Entity("PriceTracker.Entities.UserProduct", b =>
                {
                    b.HasOne("PriceTracker.Entities.TrackingProduct", "TrackingProduct")
                        .WithMany()
                        .HasForeignKey("TrackingProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceTracker.Entities.User", "User")
                        .WithMany("UserProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackingProduct");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PriceTracker.Entities.TrackingProduct", b =>
                {
                    b.Navigation("TrackingProductPrices");
                });

            modelBuilder.Entity("PriceTracker.Entities.User", b =>
                {
                    b.Navigation("UserProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
